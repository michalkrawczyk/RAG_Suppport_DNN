name: Python Checks

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  checks:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install black pylint pydocstyle

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v40
        with:
          files: "**/*.py"

      - name: Run pydocstyle on changed files (missing docs)
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          result=$(pydocstyle ${{ steps.changed-files.outputs.all_changed_files }} || true)
          if [ -n "$result" ]; then
            echo "::warning file=pydocstyle::Missing docstrings in changed files:"
            echo "$result"
          else
            echo "No missing docstrings found in changed files."
          fi
        continue-on-error: true
          
      - name: Run pylint on changed files
        if: steps.changed-files.outputs.any_changed == 'true'
        run: pylint ${{ steps.changed-files.outputs.all_changed_files }}
        continue-on-error: true

      - name: Check for TODOs
        run: |
          todos=$(grep -rni 'TODO' . --exclude-dir=.git --exclude-dir=.github --exclude-dir=__pycache__ || true)
          if [ -n "$todos" ]; then
            echo "::warning title=TODOs Found::Found TODO items in codebase"
            echo "$todos" | while IFS= read -r line; do
              echo "::warning::TODO found: $line"
            done
          else
            echo "No TODOs found."
          fi
        continue-on-error: true

      - name: Run black on changed files (check only)
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          echo "Running black --check on: ${{ steps.changed-files.outputs.all_changed_files }}"
          black --check ${{ steps.changed-files.outputs.all_changed_files }}
        continue-on-error: true